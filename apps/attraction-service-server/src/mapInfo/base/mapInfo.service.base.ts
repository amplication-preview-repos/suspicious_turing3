/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, MapInfo as PrismaMapInfo } from "@prisma/client";

export class MapInfoServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.MapInfoCountArgs, "select">): Promise<number> {
    return this.prisma.mapInfo.count(args);
  }

  async mapInfos(args: Prisma.MapInfoFindManyArgs): Promise<PrismaMapInfo[]> {
    return this.prisma.mapInfo.findMany(args);
  }
  async mapInfo(
    args: Prisma.MapInfoFindUniqueArgs
  ): Promise<PrismaMapInfo | null> {
    return this.prisma.mapInfo.findUnique(args);
  }
  async createMapInfo(args: Prisma.MapInfoCreateArgs): Promise<PrismaMapInfo> {
    return this.prisma.mapInfo.create(args);
  }
  async updateMapInfo(args: Prisma.MapInfoUpdateArgs): Promise<PrismaMapInfo> {
    return this.prisma.mapInfo.update(args);
  }
  async deleteMapInfo(args: Prisma.MapInfoDeleteArgs): Promise<PrismaMapInfo> {
    return this.prisma.mapInfo.delete(args);
  }
}
