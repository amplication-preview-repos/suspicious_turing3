/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Attraction as PrismaAttraction } from "@prisma/client";

export class AttractionServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.AttractionCountArgs, "select">
  ): Promise<number> {
    return this.prisma.attraction.count(args);
  }

  async attractions(
    args: Prisma.AttractionFindManyArgs
  ): Promise<PrismaAttraction[]> {
    return this.prisma.attraction.findMany(args);
  }
  async attraction(
    args: Prisma.AttractionFindUniqueArgs
  ): Promise<PrismaAttraction | null> {
    return this.prisma.attraction.findUnique(args);
  }
  async createAttraction(
    args: Prisma.AttractionCreateArgs
  ): Promise<PrismaAttraction> {
    return this.prisma.attraction.create(args);
  }
  async updateAttraction(
    args: Prisma.AttractionUpdateArgs
  ): Promise<PrismaAttraction> {
    return this.prisma.attraction.update(args);
  }
  async deleteAttraction(
    args: Prisma.AttractionDeleteArgs
  ): Promise<PrismaAttraction> {
    return this.prisma.attraction.delete(args);
  }
}
